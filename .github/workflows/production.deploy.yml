name: Production Deploy

on:
  release:
    types: [published]
  workflow_dispatch:


concurrency:
  group: production
  cancel-in-progress: true

jobs:
  # Notify Build Started
  notify_start:
    name: Notify Build Started
    runs-on: ubuntu-latest
    steps:
      - name: Notify Build Started
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: deploys
          status: STARTED
          color: warning
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  # Setup Job
  setup:
    name: Setup Workflow
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Meta
        id: meta
        run: |
          tag="${REF##*/}"
          echo "::set-output name=tag::${tag}"
        env:
          REF: ${{ github.ref }}
    outputs:
      tag: ${{ steps.meta.outputs.tag }}
  # Build API Image
  build_api:
    name: Build Production API Image
    needs: [setup]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        uses: ./.github/actions/api-build
        with:
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}
          extra-tags: |
            nawhas/api:latest
            nawhas/api:${{ needs.setup.outputs.tag }}
  build_web:
    name: Build Production Web Image
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build
        uses: ./.github/actions/web-build
        with:
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-password: ${{ secrets.DOCKER_PASSWORD }}
          extra-tags: |
            nawhas/web:latest
            nawhas/web:${{ needs.setup.outputs.tag }}
  # Deploy Production Environment
  deploy:
    name: Deploy Production Environment
    runs-on: ubuntu-latest
    needs: [build_api, build_web, setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          environment: production
          secret-key: ${{ secrets.GPG_KEY }}
          namespace: default
          tag: ${{ needs.setup.outputs.tag }}
  # Notify Build Status
  notify_failure:
    name: Notify Build Status
    runs-on: ubuntu-latest
    needs: [build_api, build_web, deploy]
    if: always()
    steps:
      - name: Notify Build Success
        uses: voxmedia/github-action-slack-notify-build@v1
        if: needs.build_api.result == 'success' && needs.build_web.result == 'success' && needs.deploy.result == 'success'
        with:
          channel: deploys
          status: SUCCESS
          color: good
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: Notify Build Failure
        uses: voxmedia/github-action-slack-notify-build@v1
        if: needs.build_api.result == 'failure' || needs.build_web.result == 'failure' || needs.deploy.result == 'failure'
        with:
          channel: deploys
          status: FAILED
          color: danger
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
