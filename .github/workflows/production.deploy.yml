name: Production Deploy

on:
  push:
    branches:
      - master

env:
  API_IMAGE: nawhas/api

jobs:
  build:
    name: Build & Deploy API
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master

      - name: Notify Build Started
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: alerts
          status: STARTED
          color: warning
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Save DigitalOcean kubeconfig
        uses: digitalocean/action-doctl@v1.7.0
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        with:
          args: kubernetes cluster kubeconfig show k8s-nawhas > $GITHUB_WORKSPACE/.kubeconfig

      - name: Docker Login
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - name: Build
        run: |
          docker build --file ./api/Dockerfile \
            -t $API_IMAGE:${GITHUB_SHA::8} \
            -t $API_IMAGE:${GITHUB_REF##*/} \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="${GITHUB_REF##*/}" \
            ./api

      - name: Publish
        run: |
          docker push $API_IMAGE:${GITHUB_SHA::8}
          docker push $API_IMAGE:${GITHUB_REF##*/}

      # Set up kustomize
      - name: Set up Kustomize
        working-directory: ./k8s/overlays/production
        run: |
          curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      # Update secrets.
      - name: Update secrets
        working-directory: ./k8s/overlays/production
        run: |
          gpg --quiet --batch --yes --decrypt --passphrase="$GPG_KEY" --output api.env api.env.gpg
        env:
          GPG_KEY: ${{ secrets.GPG_KEY }}

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        working-directory: ./k8s/overlays/production
        run: |
          ./kustomize edit set image IMAGE:TAG=$API_IMAGE:${GITHUB_SHA::8}
          ./kustomize build . | kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig apply -f -
          kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig rollout status deployment/api
          kubectl --kubeconfig=$GITHUB_WORKSPACE/.kubeconfig get services -o wide

      - name: Notify Build Success
        if: success()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: alerts
          status: SUCCESS
          color: good
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Notify Build Failure
        if: failure()
        uses: voxmedia/github-action-slack-notify-build@v1
        with:
          channel: alerts
          status: FAILED
          color: danger
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
