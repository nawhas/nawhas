#!/usr/bin/env bash

MODE="dev"

while [[ "$1" =~ ^- && ! "$1" == "--" ]]; do case $1 in
  -B | --built )
    MODE="built"
    ;;
  -C | --ci )
    MODE="ci"
    ;;
esac; shift; done
if [[ "$1" == '--' ]]; then shift; fi

COMPOSE="docker compose -f docker-compose.yml"

function run {
  set -x && $COMPOSE exec "$@"
}
function start {
  set -x && $COMPOSE run --rm "$@"
}

if [ "$MODE" == "built" ]; then
  echo "> Using docker-compose.built.yml";
  COMPOSE="$COMPOSE -f docker-compose.built.yml"
elif [ "$MODE" == "ci" ]; then
  echo "> Using docker-compose.ci.yml";
  COMPOSE="$COMPOSE -f docker-compose.ci.yml"
else
  echo "> Using docker-compose.dev.yml";
  COMPOSE="$COMPOSE -f docker-compose.dev.yml"
fi

# If we pass any arguments...
if [ $# -gt 0 ];then
    # If "art" is used, pass-thru to "artisan"
    if [ "$1" == "art" ]; then
      shift 1
      run api \
        php artisan "$@"

    # If "bash" is used, pass-thru to "artisan"
    elif [ "$1" == "bash" ]; then
      shift 1
      run api \
        bash "$@"

    # If "composer" is used, pass-thru to "composer"
    elif [ "$1" == "composer" ]; then
      shift 1
      run api \
        composer "$@"

    # If "test:feature" is used, run feature tests,
    # pass-thru any extra arguments to php-unit
    elif [ "$1" == "test:feature" ]; then
      shift 1
      args=$(echo "$@" | sed 's/api\///g')

      # Run database migrations for the first time
      start -e DB_HOST=test_db api \
        php artisan migrate:all

      # Start the tests
      run api \
        ./vendor/bin/phpunit --testsuite Feature "$args"


    # If "test:unit" is used, run unit tests,
    # pass-thru any extra arguments to php-unit
    elif [ "$1" == "test:unit" ]; then
      shift 1
      args=$(echo "$@" | sed 's/api\///g')

      run api \
        ./vendor/bin/phpunit --testsuite Unit "$args"


    # If "lint" is used, run linting
    elif [ "$1" == "lint" ]; then
      shift 1
      run api composer phpstan
      run api composer psalm

    # If "dusk" is used, run Dusk browser-tests,
    # pass-thru any extra arguments
    elif [ "$1" == "dusk" ]; then
      shift 1
      start test \
        php artisan dusk:wait

    # If "test" is used, run linting, unit, and feature tests
    elif [ "$1" == "test" ]; then
      ./dev lint
      ./dev test:unit
      ./dev test:feature

    # If "down" is used, take down everything
    elif [ "$1" == "down" ]; then
      shift 1
      $COMPOSE --profile dusk down

    # Else, pass-thru args to docker-compose
    else
        $COMPOSE "$@"
    fi

else
    $COMPOSE ps
fi
